<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Liedtext', 'doctrine');

/**
 * BaseLiedtext
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $lied_id
 * @property text $ueberschrift
 * @property text $ueberschrifttyp
 * @property text $strophe
 * @property integer $refrain_id
 * @property integer $reihenfolge
 * @property Lied $Lied
 * @property Refrain $Refrain
 * 
 * @method integer  getId()              Returns the current record's "id" value
 * @method integer  getLiedId()          Returns the current record's "lied_id" value
 * @method text     getUeberschrift()    Returns the current record's "ueberschrift" value
 * @method text     getUeberschrifttyp() Returns the current record's "ueberschrifttyp" value
 * @method text     getStrophe()         Returns the current record's "strophe" value
 * @method integer  getRefrainId()       Returns the current record's "refrain_id" value
 * @method integer  getReihenfolge()     Returns the current record's "reihenfolge" value
 * @method Lied     getLied()            Returns the current record's "Lied" value
 * @method Refrain  getRefrain()         Returns the current record's "Refrain" value
 * @method Liedtext setId()              Sets the current record's "id" value
 * @method Liedtext setLiedId()          Sets the current record's "lied_id" value
 * @method Liedtext setUeberschrift()    Sets the current record's "ueberschrift" value
 * @method Liedtext setUeberschrifttyp() Sets the current record's "ueberschrifttyp" value
 * @method Liedtext setStrophe()         Sets the current record's "strophe" value
 * @method Liedtext setRefrainId()       Sets the current record's "refrain_id" value
 * @method Liedtext setReihenfolge()     Sets the current record's "reihenfolge" value
 * @method Liedtext setLied()            Sets the current record's "Lied" value
 * @method Liedtext setRefrain()         Sets the current record's "Refrain" value
 * 
 * @package    adonai
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLiedtext extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Liedtext');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('lied_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('ueberschrift', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('ueberschrifttyp', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('strophe', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('refrain_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('reihenfolge', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Lied', array(
             'local' => 'lied_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Refrain', array(
             'local' => 'refrain_id',
             'foreign' => 'id',
             'onDelete' => 'NO ACTION',
             'onUpdate' => 'CASCADE'));
    }
}